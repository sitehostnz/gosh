version = '2'

[linters]
default = 'none'
enable = [
  'asciicheck',
  'bodyclose',
  'copyloopvar',
  'cyclop',
  'decorder',
  'dogsled',
  'durationcheck',
  'errcheck',
  'exhaustive',
  'forcetypeassert',
  'funlen',
  'gocognit',
  'goconst',
  'gocritic',
  'godot',
  'gomoddirectives',
  'goprintffuncname',
  'gosec',
  'govet',
  'importas',
  'ineffassign',
  'makezero',
  'misspell',
  'nakedret',
  'nestif',
  'nilerr',
  'noctx',
  'nolintlint',
  'paralleltest',
  'prealloc',
  'predeclared',
  'revive',
  'rowserrcheck',
  'sqlclosecheck',
  'staticcheck',
  'thelper',
  'unconvert',
  'unparam',
  'unused',
  'wastedassign',
  'whitespace'
]

[linters.settings]
[linters.settings.exhaustive]
default-signifies-exhaustive = true

[linters.settings.misspell]
locale = 'UK'

[linters.exclusions]
generated = 'lax'
paths = [
  'third_party$',
  'builtin$',
  'examples$'
]

[[linters.exclusions.rules]]
linters = [
  'paralleltest'
]
text = 'does not use range value in test Run'

[[linters.exclusions.rules]]
linters = [
  'cyclop',
  'funlen'
]
path = '_test\.go'

[[linters.exclusions.rules]]
linters = [
  'cyclop',
  'funlen'
]
path = 'test'

[issues]
new-from-rev = 'main'
new = true

[formatters]
enable = [
  'gci',
  'gofmt',
  'gofumpt',
  'goimports'
]

[formatters.exclusions]
generated = 'lax'
paths = [
  'third_party$',
  'builtin$',
  'examples$'
]
